3D animated graphics using the REGIS protocol


This sends graphics over a serial port.
This also shows how to do 3D graphics in pure software.


genmodel.py generates the models which are plotted.  The need to
optimize the number of polylines makes it hard to import an STL file.

3d.C:
3d_arduino.ino:
Compile & run 3d.C on X86_64 or 3d_arduino.ino on Arduino to find out
how far you can go on 8 bits.

Change the demo line & recompile to see a different model
    demo = CUBE;

It's configured for a 480x480 resolution screen, which is what xterm
defaults to.

XTerm must be recompiled with REGIS enabled.
./configure --enable-regis-graphics




To set or delete a new terminal resolution:
    echo 'xterm*regisScreenSize:640x480' | xrdb -merge
    echo 'xterm*regisScreenSize' | xrdb -remove
Start a new xterm after xrdb.

To run it on an Arduino over a serial port, upload it with the IDE, then
in xterm:

stty -F /dev/ttyACM0 ispeed 115200
cat /dev/ttyACM0

Ctrl-C exit & Ctrl-L regain access to the terminal.

It doesn't work inside screen or minicom.  To access the interactive
menu in xterm without minicom, run

stty -icanon min 1;sh -c 'cat /dev/ttyACM1&'; cat > /dev/ttyACM1



To run it natively, just run ./3d in xterm.  Ctrl-C automatically resets
the terminal.

A few REGIS features don't
work in xterm, like macrographs.  The graphics aren't drawn in realtime,
but only when exiting REGIS mode.











